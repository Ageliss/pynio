

MYLIB_IO        =       libnio


#if defined(linux)
EXTRA_CCOPTIONS = -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
#endif

#ifdef BuildNetCDF4
NETCDF4_DEFS = -DUSE_NETCDF4
#else
#define NETCDF4LIB
#endif

# HDF4.2r2 requires this definition because we ask users to
# build it w/o internal netCDF support
HDF4_NETCDF = -DH4_HAVE_NETCDF

#ifdef BuildHDFEOS
HDFEOS_DEFS = -DBuildHDFEOS $(HDF4_NETCDF)
HDFEOS_SRCS = NclHDFEOS.c
HDFEOS_OBJS = NclHDFEOS.o
#else
#define HDFEOS_SRCS
#define HDFEOS_OBJS
#define HDFEOSLIB
#endif

#ifdef BuildGRIB2
#if defined(IRIX64) || defined(x86_64)
GRIB2_DEFS = -DBuildGRIB2 -D__64BIT__
#else
GRIB2_DEFS = -DBuildGRIB2
#endif
GRIB2_SRCS = NclGRIB2.c
GRIB2_OBJS = NclGRIB2.o
#else
#define GRIB2_SRCS
#define GRIB2_OBJS
#define GRIB2LIB
#endif

NIO_DEFS = -DNIO_LIB_ONLY

NGCALLF_DEF= -D"NGCALLF(reg,caps)=$(NGCALLF)"

EXTRA_CDEFINES = $(OS1_DEF) $(MAJOR_DEF) $(NETCDF4_DEFS) $(HDFEOS_DEFS) $(GRIB2_DEFS) $(UDUNITS_DEFS) $(V5D_DEFS) $(NIO_DEFS) $(NGCALLF_DEF)
HDRS		=	$(GEN_HDRS) $(STATIC_HDRS) $(INSTALL_HDRS) 

GEN_HDRS	=	NclTypeobj.h NclTypelogical.h \
			NclTypedouble.h NclTypefloat.h \
			NclTypeint.h NclTypelong.h \
			NclTypeshort.h NclTypestring.h \
			NclTypebyte.h NclTypechar.h TypeSupport.h 

STATIC_HDRS     =       ApiRecords.h AttSupport.h DataSupport.h FileSupport.h  \
                        NclAtt.h NclCallBacksI.h NclData.h \
                        NclFile.h NclFileInterfaces.h NclMdInc.h NclHLUObj.h\
                        NclMultiDValData.h NclMultiDValHLUObjData.h \
                        OpsList.h Symbol.h VarSupport.h \
                        NclFileVar.h NclHLUVar.h HLUSupport.h NclCoordVar.h \
                        NclType.h \
                        NclMultiDValnclfileData.h NclMultiDValHLUObjData.h \
                        NclOneDValCoordData.h \
			date.h NclCCM.h NclGRIB.h NclGRIB2.h date.h tables.h \
                        NclList.h NclMultiDVallistData.h NclTypelist.h ccmhdr.h \
                        cptec_254_gtb.h dwd_002_gtb.h dwd_201_gtb.h dwd_202_gtb.h \
                        dwd_203_gtb.h dwd_204_gtb.h dwd_205_gtb.h dwd_206_gtb.h dwd_207_gtb.h \
			ecmwf_128_gtb.h ecmwf_129_gtb.h ecmwf_130_gtb.h ecmwf_131_gtb.h \
			ecmwf_132_gtb.h ecmwf_133_gtb.h ecmwf_140_gtb.h ecmwf_150_gtb.h ecmwf_151_gtb.h \
			ecmwf_160_gtb.h ecmwf_162_gtb.h ecmwf_170_gtb.h ecmwf_171_gtb.h ecmwf_172_gtb.h \
			ecmwf_173_gtb.h ecmwf_174_gtb.h ecmwf_175_gtb.h ecmwf_180_gtb.h ecmwf_190_gtb.h \
			ecmwf_200_gtb.h ecmwf_201_gtb.h ecmwf_210_gtb.h ecmwf_211_gtb.h ecmwf_228_gtb.h \
			ecmwf_230_gtb.h ecmwf_234_gtb.h fnmoc_gtb.h \
                        fsl0_gtb.h fsl1_gtb.h fsl2_gtb.h ncep_opn_gtb.h \
                        ncep_reanal_gtb.h ncep_128_gtb.h ncep_129_gtb.h  ncep_130_gtb.h \
                        ncep_131_gtb.h  ncep_133_gtb.h  ncep_140_gtb.h  ncep_141_gtb.h jma_3_gtb.h

INSTALL_HDRS	= defs.h NclVar.h \
			NclDataDefs.h \
			NclFileInterfaces.h $(NIO_HDRS)

NIO_HDRS        =       nio.h nioBase.h nioBaseI.h nioBaseP.h nioCallbacks.h nioCallbacksP.h \
			nioConvert.h nioConvertP.h nioError.h nioNresDB.h nioResList.h \
			nioVarArg.h nio_path.h niohlu.h niohluP.h

NIO_NCL_INCLUDES =      DataSupport.h FileSupport.h NclData.h NclDataDefs.h NclFile.h NclFileInterfaces.h \
                        NclMdInc.h NclMultiDValData.h NclMultiDValHLUObjData.h NclMultiDVallistData.h \
                        NclMultiDValnclfileData.h NclOneDValCoordData.h NclType.h NclTypebyte.h NclTypechar.h \
                        NclTypedouble.h NclTypefloat.h NclTypeint.h NclTypelogical.h NclTypelong.h NclTypeobj.h \
                        NclTypeshort.h NclTypestring.h NclVar.h Symbol.h TypeSupport.h defs.h cmpf.h

PYNIO_SRC_DIR   =       $(TOP)/pynio

IO_SRCS         =       nio.c nio_io.c nioError.c nioNresDB.c nioCallbacks.c \
                        nioQuarks.c nioBase.c \
                        nioConvert.c  niohlu.c \
                        nioNclHLUStub.c nio_path.c

STATIC_IO_SRCS  =       AddFileFormats.c AttSupport.c DataSupport.c \
			FileSupport.c Formats.c GetGrids.c \
			InitData.c Memory.c NclAtt.c NclCCM.c \
			NclCoordVar.c NclData.c NclFile.c NclFileVar.c \
			NclGRIB.c NclHDF.c NclMultiDValnclfileData.c \
			NclNetCdf.c NclOneDValCoordData.c NclType.c \
			NclTypelist.c NclVar.c VarSupport.c \
			ctoiee.c date.c cmpf.c 

GEN_TYPE_SRCS	=	NclTypedouble.c NclTypefloat.c \
			NclTypeint.c NclTypelogical.c \
			NclTypelong.c NclTypeobj.c \
			NclTypeshort.c NclTypestring.c \
			NclTypebyte.c NclTypechar.c TypeSupport.c \
			NclMultiDValData.c 

GEN_SRCS        =       $(GEN_TYPE_SRCS)


IOSRCS          =       $(IO_SRCS) $(GEN_TYPE_SRCS) $(STATIC_IO_SRCS) $(HDFEOS_SRCS) $(GRIB2_SRCS)


FIO_SRCS        =       llmap.f llmisc.f

FSRCS		=	qu2reg3.f rowina3.f scm0.f ncepcode.f

SRCS            =       $(IOSRCS) $(FIO_SRCS) $(FSRCS)

GEN_TYPE_OBJS	=	NclTypedouble.o NclTypefloat.o \
			NclTypeint.o NclTypelogical.o \
			NclTypelong.o NclTypeobj.o \
			NclTypeshort.o NclTypestring.o \
			NclTypebyte.o NclTypechar.o TypeSupport.o \
			NclMultiDValData.o 

STATIC_IO_OBJS  =       AddFileFormats.o AttSupport.o DataSupport.o \
			FileSupport.o Formats.o GetGrids.o \
			InitData.o Memory.o NclAtt.o NclCCM.o \
			NclCoordVar.o NclData.o NclFile.o NclFileVar.o \
			NclGRIB.o NclHDF.o NclMultiDValnclfileData.o \
			NclNetCdf.o NclOneDValCoordData.o NclType.o \
			NclTypelist.o NclVar.o VarSupport.o \
			ctoiee.o date.o 

IO_EXTRA_OBJS   =       nio.o nio_io.o nioError.o nioNresDB.o nioCallbacks.o \
			nioQuarks.o cmpf.o nioBase.o \
			nioConvert.o  niohlu.o \
			nioNclHLUStub.o nio_path.o

FMAP_OBJS       =       llmap.o llmisc.o

FOBJS		=	qu2reg3.o rowina3.o scm0.o ncepcode.o

COMMON_OBJS	=	$(GEN_TYPE_OBJS) $(STATIC_IO_OBJS) $(FOBJS) $(HDFEOS_OBJS) $(GRIB2_OBJS)

IO_OBJS         =       $(IO_EXTRA_OBJS) $(COMMON_OBJS) $(FMAP_OBJS)

IOOBJS          =       $(IO_OBJS)

LibraryTarget($(MYLIB_IO),$(IOOBJS))

includes:: $(HDRS)
depend-local:: $(SRCS)
DependTarget($(SRCS))



#
# Data Format Dependencies
#
 
NclHDF.o: NclHDF.c
	  @echo 
	  @echo Compiling NclHDF.c will generate warning messages.
	  @echo These can safely be ignored.
      $(CC) -c $(HDFDEFINES) $(HDF4_NETCDF) $(CFLAGS) NclHDF.c
	  @echo 

NclHDFEOS.o: NclHDFEOS.c
	  @echo 
	  @echo Compiling NclHDFEOS.c will generate warning messages.
	  @echo These can safely be ignored.
      $(CC) -c $(HDFDEFINES) $(HDF4_NETCDF) $(CFLAGS) NclHDFEOS.c
	  @echo 

#
# NIO dependencies
#
nio_path.c: nio_path.c.sed Makefile
        @sed    -e 's+SED_ENV_DEFS+$(NGENV_DESCRIPT)+'  <nio_path.c.sed >nio_path.c

nio_path.o: nio_path.h nio_path.c
	$(CC) -c -DNCARGURL='$(NCARGURL)' $(CFLAGS) nio_path.c

